generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

// application
model application {
  id      Int    @id @default(autoincrement())
  appname String
  message String
  system  String
  user    user   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
}

// suggestion
model suggestion {
  id          Int    @id @default(autoincrement())
  Name        String
  suggestName String
  message     String
  sent_date   String
  user        user   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}


// user section
model user {
  id           Int           @id @default(autoincrement())
  fullname     String
  login        String
  password     String
  role         String
  applications application[]
  suggestions  suggestion[]
  second_auth  second_auth[]
}


model second_auth {
  id          Int @id @default(autoincrement())
  user        user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  password    String    
}


// news section
model newsPublish {
  id          Int      @id @default(autoincrement())
  image       String
  title       String
  date        String
  message     String
  category    category @relation(fields: [category_id], references: [id])
  category_id Int
}

model category {
  id   Int           @id @default(autoincrement())
  name String
  news newsPublish[]
}


// admin section

model role {
    id            Int @id @default(autoincrement())
    role          String
    application   Boolean
    suggestion    Boolean
    logins        Boolean
    admins        admin[]
}

model admin {
    id          Int @id @default(autoincrement())
    name        String
    login       String
    password    String
    role        role @relation(fields: [roleID], references: [id])
    roleID      Int
}