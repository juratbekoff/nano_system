generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

// news section
model newsPublish {
  id          Int      @id @default(autoincrement())
  image       String
  title       String
  date        String
  message     String
  category    category @relation(fields: [category_id], references: [id])
  category_id Int
}

model category {
  id   Int           @id @default(autoincrement())
  name String
  news newsPublish[]
}

// application
model application {
  id              Int    @id @default(autoincrement())
  appname         String
  teachername     String
  message         String
  user            user   @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID          Int
}


// suggestion
model suggestion {
  id          Int    @id @default(autoincrement())
  Name        String
  suggestName String
  message     String
  sent_date   String
  user        user   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}


// user section
model user {
  id           Int           @id @default(autoincrement())
  fullname     String
  login        String
  password     String
  role         String
  applications application[]
  suggestions  suggestion[]
}

// teacher section
model teacher {
  id          Int @id @default(autoincrement())
  name        String
  login       String
  password    String
  role        String
}

// ceo section
model ceo {
  id          Int @id @default(autoincrement())
  name        String
  login       String
  password    String
  role        String
}

model testUser {
  id              Int           @id @default(autoincrement())
  fullname        String
  login           String
  password        String
  permissions     permissions[]
}

model permissions {
    id                    Int @id @default(autoincrement())
    name                  String
    users                 testUser[]
}



model testName {
    id                    Int @id @default(autoincrement())
    name                  String
    login                 Int
    password              String
    testColumn            String
    applications          applications[]
}


model applications {
    id                    Int @id @default(autoincrement())
    name                  String
    testNameId            Int
    testName              testName @relation(fields: [testNameId], references: [id], onDelete: Cascade)
}


model suggest {
    id                    Int @id @default(autoincrement())
    name                  String
}
